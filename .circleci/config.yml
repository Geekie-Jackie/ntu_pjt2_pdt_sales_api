version: 2.1

orbs:
  docker: circleci/docker@2.4.0
  snyk: snyk/snyk@2.0.1
  heroku: circleci/heroku@2.0.0

executors:
  default-executor:
    docker:
      - image: cimg/openjdk:17.0.8

# define jobs
jobs:
  build: # Define the 'build' job
    executor: default-executor
    steps:
      - checkout  # Check out your code from version control
      
      # Add a step to update the permissions of the mvnw file
      - run:
          name: Update mvnw permissions
          command: chmod +x ./mvnw
      
      - run:
          name: Build Spring Boot App
          # Compile and package your Spring Boot app with Maven
          command: |
            ./mvnw clean package -DskipTests
            mv target/pdt_sales-0.0.1-SNAPSHOT.jar app.jar
      
  test:
    executor: default-executor
    steps:
      - checkout
      - run:
          name: Run 10 Spring Boot Unit Tests in 2 Java Files
          command: |
            mvn test 

  synk_scan:
    executor: default-executor
    environment:
      IMAGE_NAME: lohcd/pdt_sales

    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Update mvnw permissions
          command: chmod +x ./mvnw

      - run:
          name: Build Spring Boot App
          command: ./mvnw clean package -DskipTests

      - save_cache:
          key: app-jar-{{ checksum "pom.xml" }}
          paths:
            - ./target/pdt_sales-0.0.1-SNAPSHOT.jar

      - restore_cache:
          key: app-jar-{{ checksum "pom.xml" }}

      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME .

      - snyk/scan:
          docker-image-name: $IMAGE_NAME
          severity-threshold: high

  build-and-push:
    executor: default-executor  # Use a Docker executor
    steps:
      - setup_remote_docker
      - checkout

      - run:
          name: Update mvnw permissions
          command: chmod +x ./mvnw

      - run:
          name: Build Spring Boot App
          command: ./mvnw clean package -DskipTests

      - save_cache:
          key: app-jar-{{ checksum "pom.xml" }}
          paths:
            - ./target/pdt_sales-0.0.1-SNAPSHOT.jar

      - restore_cache:
          key: app-jar-{{ checksum "pom.xml" }}

      - run:
          name: Docker Hub Login
          command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_LOGIN" --password-stdin

      - docker/build:
          image: lohcd/pdt_sales
          tag: v1.0.0
      - docker/push:
          image: lohcd/pdt_sales
          tag: v1.0.0

  deploy:
      executor: default-executor
      steps:
        - setup_remote_docker
        - heroku/install
        - checkout
        - run:
            name: Deploy to Heroku
            command: |
              docker pull lohcd/pdt_sales:v1.0.0
              docker tag lohcd/pdt_sales:v1.0.0 registry.heroku.com/group3-pdt-sales-api-devops/web
              docker push registry.heroku.com/group3-pdt-sales-api-devops/web
              heroku container:release web -a group3-pdt-sales-api-devops
        - run:
            name: Start Heroku Web API
            command: |
              heroku login -i
              heroku container:login
              heroku stack:set container -a group3-pdt-sales-api-devops
              heroku container:release web -a group3-pdt-sales-api-devops

workflows:
  version: 2
  ci_flow:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - test:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - synk_scan:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - build-and-push:
          requires:
            - test
          filters:
            branches:
              only:
                - master

  cicd_flow:
    jobs:
      - deploy:
          requires:
            - build-and-push
