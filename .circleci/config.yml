version: 2.1

orbs:
  docker: circleci/docker@2.4.0
  snyk: snyk/snyk@2.0.1
  maven: circleci/maven@1.4.1

executors:
  default-executor:
    docker:
      - image: cimg/openjdk:17.0.8

# define jobs
jobs:
  build: # Define the 'build' job
    executor: default-executor
    steps:
      - checkout  # Check out your code from version control
      
      # Add a step to update the permissions of the mvnw file
      - run:
          name: Update mvnw permissions
          command: chmod +x ./mvnw
      
      - run:
          name: Build Spring Boot App
          # Compile and package your Spring Boot app with Maven
          command: |
            ./mvnw clean package -DskipTests
            mv target/pdt_sales-0.0.1-SNAPSHOT.jar app.jar
      
  test:
    executor: default-executor
    steps:
      - checkout
      - run:
          name: Run 8 Spring Boot Unit Tests in 2 Java Files
          command: |
            mvn test 

  synk_scan:
    executor: default-executor
    environment:
      IMAGE_NAME: lohcd/pdt_sales

    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Update mvnw permissions
          command: chmod +x ./mvnw

      - run:
          name: Build Spring Boot App
          command: ./mvnw clean package -DskipTests

      - save_cache:
          key: app-jar-{{ checksum "pom.xml" }}
          paths:
            - ./target/pdt_sales-0.0.1-SNAPSHOT.jar

      - restore_cache:
          key: app-jar-{{ checksum "pom.xml" }}

      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME .

      - snyk/scan:
          docker-image-name: $IMAGE_NAME
          severity-threshold: high

  # build-and-push (old):
  #   executor: default-executor
  #   steps:
  #     - checkout
  #     - setup_remote_docker

  #     - run:
  #         name: Update mvnw permissions
  #         command: chmod +x ./mvnw

  #     - run:
  #         name: Build Spring Boot App
  #         command: ./mvnw clean package -DskipTests

  #     - save_cache:
  #         key: app-jar-{{ checksum "pom.xml" }}
  #         paths:
  #           - ./target/pdt_sales-0.0.1-SNAPSHOT.jar

  #     - restore_cache:
  #         key: app-jar-{{ checksum "pom.xml" }}
      
  #     - run:
  #         name: Build and Push Docker Images
  #         command: |
  #           docker-compose build
  #           docker-compose push lohcd/pdt_sales
  
  build-and-push:
    executor: docker/docker  # Use a Docker executor
    steps:
      - checkout

      # Set up the environment for Docker
      - setup_remote_docker

      # Give execute permissions to mvnw
      - run:
          name: Update mvnw permissions
          command: chmod +x ./mvnw

      # Build your Spring Boot app
      - run:
          name: Build Spring Boot App
          command: ./mvnw clean package -DskipTests

      # Use the docker/build command to build your Docker image
      - docker/build:
          context: .  # Build context is the current directory
          dockerfile: Dockerfile  # Path to your Dockerfile
          tag: lohcd/pdt_sales:1.0  # Tag your Docker image

      # Push the Docker image to Docker Hub using docker/push
      - docker/push:
          image: lohcd/pdt_sales:1.0  # Push the same image you built



workflows:
  version: 2
  ci_flow:
    jobs:
      - build
      - test:
          requires:
            - build
      - synk_scan:
          requires:
            - build
      - build-and-push:
          requires:
            - test


